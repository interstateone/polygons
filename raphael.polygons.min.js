// ************************************************************************************************
// 
// RaphaÃ«l.js Polygon Intersection
// by Brandon Evans, 2012
// brandonevans.ca
// @interstateone
// 
// Based on Efficient Clipping of Arbitrary Polygons by Gunther Greiner and Kai Hormann
// http://davis.wpi.edu/~matt/courses/clipping/
// 
// ************************************************************************************************
function Node(a,b,c){this.x=a;this.y=b;this.intersect=c?c:!1;this.entry=!1;this.visited=!1;this.onLine=function(a,b){var c=new Node(b.x-a.x,b.y-a.y),d=new Node(this.x-a.x,this.y-a.y),e,f=c.x*c.x+c.y*c.y;if(f===0)return this.x==a.x&&this.y==a.y;e=(c.x*d.x+c.y*d.y)/f;return e>=0&&e<=1};this.toString=function(){return this.x+","+this.y}}var doesIntersect=function(a,b,c,d){var e=(d.y-c.y)*(b.x-a.x)-(d.x-c.x)*(b.y-a.y);if(e===0)return!1;var f=((d.x-c.x)*(a.y-c.y)-(d.y-c.y)*(a.x-c.x))/e,g=((b.x-a.x)*(a.y-c.y)-(b.y-a.y)*(a.x-c.x))/e,h=a.x+f*(b.x-a.x),i=a.y+f*(b.y-a.y),j=new Node(h,i,!0);return 0<=f&&f<=1&&0<=g&&g<=1?j:!1},norm=function(a,b){return Math.sqrt((b.x-a.x)*(b.x-a.x)+(b.y-a.y)*(b.y-a.y))},containmentTest=function(a,b){var c,d=new Node(0,a.y,!1),e=0;for(c=0;c<b.length;c++)doesIntersect(d,a,b[c],b[c===b.length-1?0:c+1])&&e++;return Boolean(e%2)},markEntryPoints=function(a,b,c){var d=containmentTest(a[0],b),e;c&&(d=!d);for(e=0;e<b.length;e++)if(b[e].intersect){b[e].entry=d;d=!d}},markIntersects=function(a,b){var c=a.length,d=b.length,e,f,g,h;for(e=0;e<c;e++)if(!a[e].intersect)for(f=0;f<d;f++)if(!b[f].intersect){e+1===c?g=-e:g=1;while(a[e+g].intersect){g++;e+g===c&&(g=-e)}f+1===d?h=-f:h=1;while(b[f+h].intersect){h++;f+h===d&&(h=-f)}var i=doesIntersect(a[e],a[e+g],b[f],b[f+h]);if(i){a.splice(e+1,0,i);b.splice(f+1,0,i);c++;d++}}};Raphael.fn.clip=function(a,b){var c,d;a=a.toNodes();b=b.toNodes();markIntersects(a,b);markEntryPoints(a,b,!0);markEntryPoints(b,a,!0);var e=a[0],f=[],g=!0,h=!0;i=0;while(e.entry!=1){i++;e=a[i]}a[i].visited=!0;do{f.push(e);if(e.intersect===!0){if(g){i=0;while(b[i].x!=e.x&&b[i].y!=e.y)i++;b[i].entry===!1?h=!0:h=!1}else{i=0;while(a[i].x!=e.x&&a[i].y!=e.y)i++;a[i].entry===!0?h=!0:h=!1}g=!g;h?i++:i--;g&&i===c?i=0:g&&i<0?i=c-1:!g&&i===d?i=0:!g&&i<0&&(i=d-1);if(g){a[i].visited=!0;e=a[i]}else{b[i].visited=!0;e=b[i]}}else{h?i++:i--;g&&i===c?i=0:g&&i<0?i=c-1:!g&&i===d?i=0:!g&&i<0&&(i=d-1);if(g){a[i].visited=!0;e=a[i]}else{b[i].visited=!0;e=b[i]}}}while(e.x!==f[0].x&&e.y!==f[0].y);return paper.path("M"+f.join("L")+"Z")};Raphael.fn.join=function(a,b){a=a.toNodes();b=b.toNodes();var c=a.length,d=b.length,e,f,g,h;for(e=0;e<c;e++)if(!a[e].intersect)for(f=0;f<d;f++)if(!b[f].intersect){e+1===c?g=-e:g=1;while(a[e+g].intersect){g++;e+g===c&&(g=-e)}f+1===d?h=-f:h=1;while(b[f+h].intersect){h++;f+h===d&&(h=-f)}var i=doesIntersect(a[e],a[e+g],b[f],b[f+h]);if(i){a.splice(e+1,0,i);b.splice(f+1,0,i);c++;d++}}markEntryPoints(a,b,!1);markEntryPoints(b,a,!1);var j=a[0],k=[],l=!0,m=!0;g=0;while(j.entry!=1){g++;j=a[g]}a[g].visited=!0;do{k.push(j);if(j.intersect===!0){if(l){g=0;while(b[g].x!=j.x&&b[g].y!=j.y)g++;b[g].entry===!1?m=!0:m=!1}else{g=0;while(a[g].x!=j.x&&a[g].y!=j.y)g++;a[g].entry===!0?m=!0:m=!1}l=!l;m?g++:g--;l&&g===c?g=0:l&&g<0?g=c-1:!l&&g===d?g=0:!l&&g<0&&(g=d-1);if(l){a[g].visited=!0;j=a[g]}else{b[g].visited=!0;j=b[g]}}else{m?g++:g--;l&&g===c?g=0:l&&g<0?g=c-1:!l&&g===d?g=0:!l&&g<0&&(g=d-1);if(l){a[g].visited=!0;j=a[g]}else{b[g].visited=!0;j=b[g]}}}while(j.x!==k[0].x&&j.y!==k[0].y);return paper.path("M"+k.join("L")+"Z")};Raphael.st.join=function(){var a=this.length,b,c=null;c=paper.join(this[0],this[1]);if(a>=3)for(b=2;b<a;b++)c=paper.join(c,this[b]);return c?c:!1};Raphael.el.toNodes=function(){var a=Raphael.parsePathString(this.attr("path")),b=[];a[a.length-1][0]==="Z"&&a.pop();a.forEach(function(a){b.push(new Node(a[1],a[2],!1))});var c=0;for(var d=0;d<b.length;d++)c+=(b[d+1<b.length?d+1:0].x-b[d].x)*(b[d+1<b.length?d+1:0].y+b[d].y);c>0&&b.reverse();return b};